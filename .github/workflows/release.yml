name: Test and Release on release/*

on:
  push:
    branches:
      - 'release/*'

permissions:
  contents: write

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run tests
        run: go test ./...

      - name: Derive version from branch name
        id: meta
        shell: bash
        run: |
          ref="${GITHUB_REF_NAME}"
          raw="${ref#release/}"
          if [[ -z "$raw" || "$raw" == "$ref" ]]; then
            echo "Could not derive version from branch name '$ref' (expected 'release/<version>')" >&2
            exit 1
          fi
          # strip optional leading v/V
          case "$raw" in
            v*) raw="${raw#v}" ;;
            V*) raw="${raw#V}" ;;
          esac

          # Split into parts and validate numeric segments
          IFS='.' read -r p1 p2 p3 extra <<< "$raw"
          for seg in "$p1" "$p2" "$p3"; do
            if [[ -n "$seg" && ! "$seg" =~ ^[0-9]+$ ]]; then
              echo "Invalid version segment '$seg' in '$raw' (only digits and dots are allowed)" >&2
              exit 1
            fi
          done

          # Default missing parts to 0 to get a.b.c
          p1="${p1:-0}"
          p2="${p2:-0}"
          p3="${p3:-0}"
          version="${p1}.${p2}.${p3}"
          tag="v${version}"

          echo "Derived version '$raw' normalized to '$version' -> tag '$tag'"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Check if tag exists
        id: check_tag
        shell: bash
        run: |
          tag="${{ steps.meta.outputs.tag }}"
          if git ls-remote --tags origin | grep -q "refs/tags/${tag}$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: ${{ github.sha }}
          tag_name: ${{ steps.meta.outputs.tag }}
          name: Release ${{ steps.meta.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
